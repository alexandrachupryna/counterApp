{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/counter/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass Counter extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, this.props.count);\n  }\n\n}\n\nclass Button extends React.Component {\n  render() {\n    const _this$props = this.props,\n          style = _this$props.style,\n          label = _this$props.label;\n    return React.createElement(\"button\", {\n      style: style,\n      onClick: this.props.onClick,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, label);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0,\n      is: false,\n      buttonLabel: \"Hide\"\n    };\n    this.addCount = this.addCount.bind(this);\n    this.reduceCount = this.reduceCount.bind(this);\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  addCount() {\n    this.setState((prevState, {\n      count\n    }) => ({\n      count: prevState.count + 1\n    }));\n  }\n\n  reduceCount() {\n    this.setState((prevState, {\n      count\n    }) => ({\n      count: prevState.count - 1\n    }));\n  }\n\n  toggleClass() {\n    const currentState = this.state.active;\n    this.setState({\n      active: !currentState,\n      buttonLabel: \"\"\n    });\n  }\n\n  render() {\n    console.log(this.state.count);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"buttonPlus\",\n      label: \"+\",\n      onClick: this.addCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Counter, {\n      className: this.state.active ? 'counterNone' : 'counter',\n      count: this.state.count,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"buttonMinus\",\n      label: \"-\",\n      onClick: this.reduceCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"counterShown\",\n      label: this.state.buttonLabel,\n      onClick: this.toggleClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/counter/src/App.js"],"names":["React","Counter","Component","render","props","className","count","Button","style","label","onClick","App","constructor","state","is","buttonLabel","addCount","bind","reduceCount","toggleClass","setState","prevState","currentState","active","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass Counter extends React.Component {\n  render() {\n    return <div className={this.props.className}>{this.props.count}</div>\n  }\n}\n\nclass Button extends React.Component {\n  render() {\n      const { style, label } = this.props;\n\n      return (\n          <button style={style} onClick={this.props.onClick} className={this.props.className}>\n              {label}\n          </button>\n      );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state =  {\n      count: 0,\n      is: false,\n      buttonLabel: \"Hide\"\n    }\n    this.addCount = this.addCount.bind(this);\n    this.reduceCount = this.reduceCount.bind(this);\n    this.toggleClass = this.toggleClass.bind(this);\n  }\n\n  addCount() {\n    this.setState((prevState, { count }) => ({\n      count: prevState.count + 1\n    }));\n  }\n\n  reduceCount() {\n    this.setState((prevState, { count }) => ({\n      count: prevState.count - 1\n    }));\n  }\n\n  toggleClass() {\n    const currentState = this.state.active;\n    this.setState({ \n      active: !currentState,\n      buttonLabel: \"\" \n    });\n  }\n\n  render() {\n    console.log(this.state.count);\n    return (\n      <React.Fragment>\n        <Button className=\"buttonPlus\" label=\"+\" onClick={this.addCount}/>\n        <Counter className={this.state.active ? 'counterNone': 'counter'}  count={this.state.count}  />\n        <Button className=\"buttonMinus\" label=\"-\" onClick={this.reduceCount} />\n        <Button className=\"counterShown\" label={this.state.buttonLabel} onClick={this.toggleClass} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}